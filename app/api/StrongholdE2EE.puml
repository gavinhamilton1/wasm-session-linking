@startuml
title End-to-End Encryption (E2EE) Setup & Payload Flow

participant "SSDK (Client)" as SSDK
participant "SGW (Gateway)" as SGW
participant "API (Server)" as API

== E2EE Set-up Flow ==

SSDK -> SSDK : Initialize with SGW public key
SSDK -> SSDK : Generate ECDH key pair (private/public)
SSDK -> SSDK : Derive SSDK-SGW SEK using HKDF
SSDK -> SSDK : Encrypt access token with SSDK-SGW SEK
SSDK -> SGW : Send E2EE set-up request (Enc[Access Token], SSDK ECDH Public Key)

SGW -> SGW : Derive SSDK-SGW SEK using HKDF
SGW -> SGW : Decrypt E2EE set-up message
SGW -> SGW : Verify Access Token
SGW -> API : Forward E2EE request (SSDK ECDH Public Key, Access Token)

API -> API : Generate ECDH key pair (private/public)
API -> API : Derive API-SEK using HKDF
API -> API : Sign API ECDH Public Key with API Verification Private Key
API -> API : Encrypt {API ECDH Public Key, Signature} with SSDK-API SEK
API -> SGW : Send encrypted API public key package

SGW -> SSDK : Forward encrypted API public key package

SSDK -> SSDK : Decrypt API public key package with SSDK-API SEK
SSDK -> SSDK : Verify API public key signature with API Verification Public Key
SSDK -> SSDK : Derive SSDK-API SEK using HKDF

== Payload Flow ==

SSDK -> SSDK : Encrypt API payload with SSDK-API SEK
SSDK -> SSDK : Encrypt forwarding request with SSDK-SGW SEK
SSDK -> SGW : Send encrypted forwarding request

SGW -> SGW : Decrypt forwarding request (extract access token)
SGW -> SGW : Verify access token
SGW -> API : Forward encrypted API payload

API -> API : Decrypt API payload with SSDK-API SEK
API -> API : Process request
API -> API : Encrypt response with SSDK-API SEK
API -> SGW : Send encrypted response

SGW -> SSDK : Forward encrypted response

SSDK -> SSDK : Decrypt response with SSDK-API SEK

@enduml
